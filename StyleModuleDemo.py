#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Jun 08, 2023 08:02:56 AM CDT  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_script = sys.argv[0]
_location = os.path.dirname(_script)

import StyleModuleDemo_support

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40' # X11 color: #666666
_ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black' 
_tabfg2 = 'black' 
_tabbg1 = 'grey75' 
_tabbg2 = 'grey89' 
_bgmode = 'light' 
font10 = "-family {DejaVu Sans} -size 10"

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran:
       return
    style = ttk.Style()
    if sys.platform == "win32":
       style.theme_use('winnative')
    style.configure('.',background=_bgcolor)
    style.configure('.',foreground=_fgcolor)
    style.configure('.',font='-family {DejaVu Sans} -size 10')
    style.map('.',background =
       [('selected', _compcolor), ('active',_ana2color)])
    if _bgmode == 'dark':
       style.map('.',foreground =
         [('selected', 'white'), ('active','white')])
    else:
       style.map('.',foreground =
         [('selected', 'black'), ('active','black')])
    style.map('TCheckbutton',background =
           [('selected', _bgcolor), ('active', _ana2color)], indicatorcolor =
           [('selected', _fgcolor), ('!active', _bgcolor)])
    style.map('TRadiobutton',background =
           [('selected', _bgcolor), ('active', _ana2color)], indicatorcolor =
           [('selected', _fgcolor), ('!active', _bgcolor)])
    _style_code_ran = 1

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("981x661+619+156")
        top.minsize(1, 1)
        top.maxsize(2545, 1410)
        top.resizable(0,  0)
        top.title("Style Module Demo")
        top.configure(highlightcolor="black")

        self.top = top
        self.combobox = tk.StringVar()
        self.che58 = tk.IntVar()
        self.che59 = tk.IntVar()
        self.che60 = tk.IntVar()
        self.selectedButton = tk.IntVar()
        self.tch49 = tk.IntVar()
        self.tch50 = tk.IntVar()
        self.tch51 = tk.IntVar()
        self.TselectedButton = tk.IntVar()
        self.che50 = tk.IntVar()
        self.che56 = tk.IntVar()

        self.Labelframe1 = tk.LabelFrame(self.top)
        self.Labelframe1.place(x=10, y=50, height=265, width=960)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(font="-family {DejaVu Sans} -size 10")
        self.Labelframe1.configure(text='''Tk Standard Widgets''')
        self.Labelframe2 = tk.LabelFrame(self.Labelframe1)
        self.Labelframe2.place(x=10, y=30, height=165, width=200
                , bordermode='ignore')
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(font="-family {DejaVu Sans} -size 10")
        self.Labelframe2.configure(text='''Tk Checkbuttons''')
        self.Checkbutton3 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton3.place(x=20, y=30, height=23, width=144
                , bordermode='ignore')
        self.Checkbutton3.configure(activebackground="beige")
        self.Checkbutton3.configure(anchor='w')
        self.Checkbutton3.configure(compound='left')
        self.Checkbutton3.configure(font="-family {DejaVu Sans} -size 10")
        self.Checkbutton3.configure(justify='left')
        self.Checkbutton3.configure(selectcolor="#d9d9d9")
        self.Checkbutton3.configure(text='''Check''')
        self.Checkbutton3.configure(variable=self.che58)
        self.Checkbutton4 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton4.place(x=20, y=70, height=23, width=144
                , bordermode='ignore')
        self.Checkbutton4.configure(activebackground="beige")
        self.Checkbutton4.configure(anchor='w')
        self.Checkbutton4.configure(compound='left')
        self.Checkbutton4.configure(font="-family {DejaVu Sans} -size 10")
        self.Checkbutton4.configure(justify='left')
        self.Checkbutton4.configure(selectcolor="#d9d9d9")
        self.Checkbutton4.configure(text='''Check''')
        self.Checkbutton4.configure(variable=self.che59)
        self.Checkbutton5 = tk.Checkbutton(self.Labelframe2)
        self.Checkbutton5.place(x=20, y=110, height=23, width=144
                , bordermode='ignore')
        self.Checkbutton5.configure(activebackground="beige")
        self.Checkbutton5.configure(anchor='w')
        self.Checkbutton5.configure(compound='left')
        self.Checkbutton5.configure(font="-family {DejaVu Sans} -size 10")
        self.Checkbutton5.configure(justify='left')
        self.Checkbutton5.configure(selectcolor="#d9d9d9")
        self.Checkbutton5.configure(text='''Check''')
        self.Checkbutton5.configure(variable=self.che60)
        self.Labelframe3 = tk.LabelFrame(self.Labelframe1)
        self.Labelframe3.place(x=212, y=30, height=165, width=200
                , bordermode='ignore')
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(font="-family {DejaVu Sans} -size 10")
        self.Labelframe3.configure(text='''Tk Radiobuttons''')
        self.Radiobutton1 = tk.Radiobutton(self.Labelframe3)
        self.Radiobutton1.place(x=10, y=30, height=32, width=144
                , bordermode='ignore')
        self.Radiobutton1.configure(activebackground="beige")
        self.Radiobutton1.configure(anchor='w')
        self.Radiobutton1.configure(compound='left')
        self.Radiobutton1.configure(font="-family {DejaVu Sans} -size 10")
        self.Radiobutton1.configure(justify='left')
        self.Radiobutton1.configure(selectcolor="#d9d9d9")
        self.Radiobutton1.configure(text='''Radio''')
        self.Radiobutton1.configure(value='1')
        self.Radiobutton1.configure(variable=self.selectedButton)
        self.Radiobutton2 = tk.Radiobutton(self.Labelframe3)
        self.Radiobutton2.place(x=10, y=70, height=32, width=144
                , bordermode='ignore')
        self.Radiobutton2.configure(activebackground="beige")
        self.Radiobutton2.configure(anchor='w')
        self.Radiobutton2.configure(compound='left')
        self.Radiobutton2.configure(font="-family {DejaVu Sans} -size 10")
        self.Radiobutton2.configure(justify='left')
        self.Radiobutton2.configure(selectcolor="#d9d9d9")
        self.Radiobutton2.configure(text='''Radio''')
        self.Radiobutton2.configure(value='2')
        self.Radiobutton2.configure(variable=self.selectedButton)
        self.Radiobutton3 = tk.Radiobutton(self.Labelframe3)
        self.Radiobutton3.place(x=10, y=110, height=32, width=144
                , bordermode='ignore')
        self.Radiobutton3.configure(activebackground="beige")
        self.Radiobutton3.configure(anchor='w')
        self.Radiobutton3.configure(compound='left')
        self.Radiobutton3.configure(font="-family {DejaVu Sans} -size 10")
        self.Radiobutton3.configure(justify='left')
        self.Radiobutton3.configure(selectcolor="#d9d9d9")
        self.Radiobutton3.configure(text='''Radio''')
        self.Radiobutton3.configure(value='3')
        self.Radiobutton3.configure(variable=self.selectedButton)
        self.Labelframe4 = tk.LabelFrame(self.Labelframe1)
        self.Labelframe4.place(x=413, y=30, height=225, width=540
                , bordermode='ignore')
        self.Labelframe4.configure(relief='groove')
        self.Labelframe4.configure(font="-family {DejaVu Sans} -size 10")
        self.Labelframe4.configure(text='''Other Tk widgets''')
        self.Entry1 = tk.Entry(self.Labelframe4)
        self.Entry1.place(x=20, y=50, height=23, width=146, bordermode='ignore')
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(selectbackground="#c4c4c4")
        self.Label1 = tk.Label(self.Labelframe4)
        self.Label1.place(x=20, y=24, height=21, width=69, bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(anchor='w')
        self.Label1.configure(compound='left')
        self.Label1.configure(font="-family {DejaVu Sans} -size 10")
        self.Label1.configure(text='''Tk Entry''')
        self.Message1 = tk.Message(self.Labelframe4)
        self.Message1.place(x=210, y=50, height=31, width=112
                , bordermode='ignore')
        self.Message1.configure(borderwidth="2")
        self.Message1.configure(font="-family {DejaVu Sans} -size 10")
        self.Message1.configure(padx="1")
        self.Message1.configure(pady="1")
        self.Message1.configure(relief="groove")
        self.Message1.configure(text='''Message''')
        self.Message1.configure(width=112)
        self.Scale1 =  tk.Scale(self.Labelframe4, from_=0.0, to=100.0, resolution=1.0)
        self.Scale1.place(x=20, y=120, height=42, width=104)
        self.Scale1.configure(activebackground="beige")
        self.Scale1.configure(font="-family {DejaVu Sans} -size 10")
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(troughcolor="#d9d9d9")
        self.Spinbox1 = tk.Spinbox(self.Labelframe4, from_=1.0, to=100.0)
        self.Spinbox1.place(x=160, y=140, height=23, width=78
                , bordermode='ignore')
        self.Spinbox1.configure(activebackground="#f9f9f9")
        self.Spinbox1.configure(background="white")
        self.Spinbox1.configure(font="-family {DejaVu Sans} -size 10")
        self.Spinbox1.configure(highlightbackground="black")
        self.Spinbox1.configure(selectbackground="#c4c4c4")
        self.Listbox1 = tk.Listbox(self.Labelframe4)
        self.Listbox1.place(x=350, y=40, height=56, width=114
                , bordermode='ignore')
        self.Listbox1.configure(background="white")
        self.Listbox1.configure(font="TkFixedFont")
        self.Listbox1.configure(selectbackground="#c4c4c4")
        self.Text1 = tk.Text(self.Labelframe4)
        self.Text1.place(x=350, y=140, height=54, width=116, bordermode='ignore')

        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(wrap="word")
        self.Label2 = tk.Label(self.Labelframe4)
        self.Label2.place(x=210, y=21, height=21, width=102, bordermode='ignore')

        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(anchor='w')
        self.Label2.configure(compound='left')
        self.Label2.configure(font="-family {DejaVu Sans} -size 10")
        self.Label2.configure(text='''Tk Message''')
        self.Label3 = tk.Label(self.Labelframe4)
        self.Label3.place(x=370, y=20, height=21, width=101, bordermode='ignore')

        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(anchor='w')
        self.Label3.configure(compound='left')
        self.Label3.configure(font="-family {DejaVu Sans} -size 10")
        self.Label3.configure(text='''Tk Listbox''')
        self.Label4 = tk.Label(self.Labelframe4)
        self.Label4.place(x=20, y=103, height=21, width=99, bordermode='ignore')
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(anchor='w')
        self.Label4.configure(compound='left')
        self.Label4.configure(font="-family {DejaVu Sans} -size 10")
        self.Label4.configure(text='''Tk Scale''')
        self.Label5 = tk.Label(self.Labelframe4)
        self.Label5.place(x=160, y=103, height=21, width=89, bordermode='ignore')

        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(anchor='w')
        self.Label5.configure(compound='left')
        self.Label5.configure(font="-family {DejaVu Sans} -size 10")
        self.Label5.configure(text='''Tk Spinbox''')
        self.Label6 = tk.Label(self.Labelframe4)
        self.Label6.place(x=340, y=106, height=21, width=129
                , bordermode='ignore')
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(anchor='w')
        self.Label6.configure(compound='left')
        self.Label6.configure(font="-family {DejaVu Sans} -size 10")
        self.Label6.configure(text='''Tk Text widget''')
        _style_code()
        self.TLabelframe1 = ttk.Labelframe(self.top)
        self.TLabelframe1.place(x=10, y=330, height=285, width=960)
        self.TLabelframe1.configure(relief='')
        self.TLabelframe1.configure(text='''Ttk Themed Widgets''')
        self.TLabelframe2 = ttk.Labelframe(self.TLabelframe1)
        self.TLabelframe2.place(x=10, y=30, height=165, width=200
                , bordermode='ignore')
        self.TLabelframe2.configure(relief='')
        self.TLabelframe2.configure(text='''TCheckButtons''')
        self.TCheckbutton1 = ttk.Checkbutton(self.TLabelframe2)
        self.TCheckbutton1.place(x=20, y=30, width=144, height=31
                , bordermode='ignore')
        self.TCheckbutton1.configure(variable=self.tch49)
        self.TCheckbutton1.configure(takefocus="")
        self.TCheckbutton1.configure(text='''Tcheck''')
        self.TCheckbutton1.configure(compound='left')
        self.TCheckbutton2 = ttk.Checkbutton(self.TLabelframe2)
        self.TCheckbutton2.place(x=20, y=70, width=144, height=31
                , bordermode='ignore')
        self.TCheckbutton2.configure(variable=self.tch50)
        self.TCheckbutton2.configure(takefocus="")
        self.TCheckbutton2.configure(text='''Tcheck''')
        self.TCheckbutton2.configure(compound='left')
        self.TCheckbutton3 = ttk.Checkbutton(self.TLabelframe2)
        self.TCheckbutton3.place(x=20, y=110, width=144, height=31
                , bordermode='ignore')
        self.TCheckbutton3.configure(variable=self.tch51)
        self.TCheckbutton3.configure(takefocus="")
        self.TCheckbutton3.configure(text='''Tcheck''')
        self.TCheckbutton3.configure(compound='left')
        self.TLabelframe3 = ttk.Labelframe(self.TLabelframe1)
        self.TLabelframe3.place(x=212, y=30, height=165, width=200
                , bordermode='ignore')
        self.TLabelframe3.configure(relief='')
        self.TLabelframe3.configure(text='''TRadiobuttons''')
        self.TRadiobutton1 = ttk.Radiobutton(self.TLabelframe3)
        self.TRadiobutton1.place(x=20, y=30, width=144, height=31
                , bordermode='ignore')
        self.TRadiobutton1.configure(variable=self.TselectedButton)
        self.TRadiobutton1.configure(text='''TRadio''')
        self.TRadiobutton1.configure(compound='left')
        self.TRadiobutton2 = ttk.Radiobutton(self.TLabelframe3)
        self.TRadiobutton2.place(x=20, y=70, width=144, height=31
                , bordermode='ignore')
        self.TRadiobutton2.configure(variable=self.TselectedButton)
        self.TRadiobutton2.configure(value='2')
        self.TRadiobutton2.configure(text='''TRadio''')
        self.TRadiobutton2.configure(compound='left')
        self.TRadiobutton3 = ttk.Radiobutton(self.TLabelframe3)
        self.TRadiobutton3.place(x=20, y=110, width=144, height=31
                , bordermode='ignore')
        self.TRadiobutton3.configure(variable=self.TselectedButton)
        self.TRadiobutton3.configure(value='3')
        self.TRadiobutton3.configure(text='''TRadio''')
        self.TRadiobutton3.configure(compound='left')
        self.TLabelframe4 = ttk.Labelframe(self.TLabelframe1)
        self.TLabelframe4.place(x=414, y=30, height=245, width=540
                , bordermode='ignore')
        self.TLabelframe4.configure(relief='')
        self.TLabelframe4.configure(text='''Other ttk widgets''')
        self.TCombobox1 = ttk.Combobox(self.TLabelframe4)
        self.TCombobox1.place(x=20, y=55, height=21, width=137
                , bordermode='ignore')
        self.TCombobox1.configure(textvariable=self.combobox)
        self.TCombobox1.configure(takefocus="")
        self.TEntry1 = ttk.Entry(self.TLabelframe4)
        self.TEntry1.place(x=180, y=54, height=21, width=134
                , bordermode='ignore')
        self.TEntry1.configure(takefocus="")
        self.TEntry1.configure(cursor="xterm")
        self.TLabel1 = ttk.Label(self.TLabelframe4)
        self.TLabel1.place(x=30, y=31, height=19, width=96, bordermode='ignore')
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="-family {DejaVu Sans} -size 10")
        self.TLabel1.configure(relief="flat")
        self.TLabel1.configure(anchor='w')
        self.TLabel1.configure(justify='left')
        self.TLabel1.configure(text='''TCombo''')
        self.TLabel1.configure(compound='left')
        self.TLabel2 = ttk.Label(self.TLabelframe4)
        self.TLabel2.place(x=180, y=31, height=19, width=94, bordermode='ignore')

        self.TLabel2.configure(background="#d9d9d9")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font="-family {DejaVu Sans} -size 10")
        self.TLabel2.configure(relief="flat")
        self.TLabel2.configure(anchor='w')
        self.TLabel2.configure(justify='left')
        self.TLabel2.configure(text='''TEntry''')
        self.TLabel2.configure(compound='left')
        self.TProgressbar1 = ttk.Progressbar(self.TLabelframe4)
        self.TProgressbar1.place(x=340, y=57, width=150, height=19
                , bordermode='ignore')
        self.TProgressbar1.configure(length="150")
        self.TProgressbar1.configure(mode="indeterminate")
        self.TLabel3 = ttk.Label(self.TLabelframe4)
        self.TLabel3.place(x=350, y=31, height=19, width=122
                , bordermode='ignore')
        self.TLabel3.configure(background="#d9d9d9")
        self.TLabel3.configure(foreground="#000000")
        self.TLabel3.configure(font="-family {DejaVu Sans} -size 10")
        self.TLabel3.configure(relief="flat")
        self.TLabel3.configure(anchor='w')
        self.TLabel3.configure(justify='left')
        self.TLabel3.configure(text='''TProgressbar''')
        self.TLabel3.configure(compound='left')
        self.TScale1 = ttk.Scale(self.TLabelframe4, from_=0, to=1.0)
        self.TScale1.place(x=30, y=139, height=17, width=130)
        self.TScale1.configure(length="130")
        self.TScale1.configure(takefocus="")
        self.TSpinbox1 = ttk.Spinbox(self.TLabelframe4, from_=1, to=100)
        self.TSpinbox1.place(x=190, y=138, height=20, width=145
                , bordermode='ignore')
        self.TSpinbox1.configure(background="white")
        self.TSpinbox1.configure(takefocus="")
        self.TLabel4 = ttk.Label(self.TLabelframe4)
        self.TLabel4.place(x=30, y=112, height=19, width=112
                , bordermode='ignore')
        self.TLabel4.configure(background="#d9d9d9")
        self.TLabel4.configure(foreground="#000000")
        self.TLabel4.configure(font="-family {DejaVu Sans} -size 10")
        self.TLabel4.configure(relief="flat")
        self.TLabel4.configure(anchor='w')
        self.TLabel4.configure(justify='left')
        self.TLabel4.configure(text='''TScale''')
        self.TLabel4.configure(compound='left')
        self.TLabel5 = ttk.Label(self.TLabelframe4)
        self.TLabel5.place(x=200, y=112, height=19, width=82
                , bordermode='ignore')
        self.TLabel5.configure(background="#d9d9d9")
        self.TLabel5.configure(foreground="#000000")
        self.TLabel5.configure(font="-family {DejaVu Sans} -size 10")
        self.TLabel5.configure(relief="flat")
        self.TLabel5.configure(anchor='w')
        self.TLabel5.configure(justify='left')
        self.TLabel5.configure(text='''TSpinbox''')
        self.TLabel5.configure(compound='left')
        self.btnExit = ttk.Button(self.top)
        self.btnExit.place(x=870, y=10, height=38, width=83)
        self.btnExit.configure(command=StyleModuleDemo_support.on_btnExit)
        self.btnExit.configure(takefocus="")
        self.btnExit.configure(text='''Exit''')
        self.btnExit.configure(compound='left')
        self.Checkbutton1 = tk.Checkbutton(self.top)
        self.Checkbutton1.place(x=30, y=10, height=23, width=167)
        self.Checkbutton1.configure(activebackground="beige")
        self.Checkbutton1.configure(anchor='w')
        self.Checkbutton1.configure(command=StyleModuleDemo_support.on_chk1)
        self.Checkbutton1.configure(compound='left')
        self.Checkbutton1.configure(font="-family {DejaVu Sans} -size 10")
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(selectcolor="#d9d9d9")
        self.Checkbutton1.configure(text='''Show The Surprise''')
        self.Checkbutton1.configure(variable=self.che50)
        self.Checkbutton2 = tk.Checkbutton(self.top)
        self.Checkbutton2.place(x=250, y=10, height=23, width=157)
        self.Checkbutton2.configure(activebackground="beige")
        self.Checkbutton2.configure(anchor='w')
        self.Checkbutton2.configure(command=StyleModuleDemo_support.on_disableWidgets)
        self.Checkbutton2.configure(compound='left')
        self.Checkbutton2.configure(font="-family {DejaVu Sans} -size 10")
        self.Checkbutton2.configure(justify='left')
        self.Checkbutton2.configure(selectcolor="#d9d9d9")
        self.Checkbutton2.configure(text='''Disable Widgets''')
        self.Checkbutton2.configure(variable=self.che56)
        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.sub_menu = tk.Menu(self.menubar, activebackground='beige'
                ,activeforeground='black', tearoff=0)
        self.menubar.add_cascade(compound='left', label='File', menu=self.sub_menu
                ,)
        self.sub_menu.add_command(compound='left',label='New')
        self.sub_menu.add_command(compound='left',label='Open')
        self.sub_menu.add_separator()
        self.sub_menu.add_command(command=StyleModuleDemo_support.on_mnuFileExit
                ,compound='left', label='Exit')
        self.sub_menu1 = tk.Menu(self.menubar, activebackground='beige'
                ,activeforeground='black', tearoff=0)
        self.menubar.add_cascade(compound='left', label='Help'
                ,menu=self.sub_menu1, )
        self.sub_menu1.add_command(compound='left',label='About')
        self.sub_menu1.add_separator()
        self.sub_menu1.add_command(compound='left',label='Help')

def start_up():
    StyleModuleDemo_support.main()

if __name__ == '__main__':
    StyleModuleDemo_support.main()




